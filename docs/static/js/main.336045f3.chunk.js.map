{"version":3,"sources":["lighting/Lighting.js","object/Ball.js","object/String.js","App.js","index.js"],"names":["Lighting","props","intensity","Ball","useSphere","mass","position","size","ballSize","ref","api","t","useRef","startPos","useFrame","current","speed","v","radius","Math","cos","pow","sin","set","attach","args","roughness","metalness","color","Balls","ballArr","i","count","push","bpm","PI","p0","key","oct","Strings","stringArr","a","floor","random","b","note","String","useState","active","setActive","useBox","type","onCollide","e","Tone","toDestination","triggerAttackRelease","setTimeout","aProps","useSpring","mesh","indexOf","length","meshStandardMaterial","App","shadowMap","gl","alpha","camera","fov","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.336045f3.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport { Sky } from '@react-three/drei'\r\n\r\nexport const Lighting = props => {\r\n  return (\r\n    <>\r\n      {/* <Sky sunPosition={[10,10,10]}/> */}\r\n      {/* <directionalLight position={[10,10,10]}/> */}\r\n      <ambientLight intensity={1} />\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\nimport { useSphere } from '@react-three/cannon'\r\n\r\nexport const Ball = props => {\r\n  const [ref, api] = useSphere(() => ({\r\n    mass: 0,\r\n    position: props.position,\r\n    size: [props.ballSize, 32, 32],\r\n  }))\r\n\r\n  const t = useRef(props.startPos)\r\n\r\n  useFrame(() => {\r\n    t.current += props.speed / 41000\r\n\r\n    const v = [\r\n      (props.radius/2 * Math.cos(t.current)) /\r\n        (1 + Math.pow(Math.sin(t.current), 2)),\r\n      (props.radius * Math.sin(t.current) * Math.cos(t.current)) /\r\n        (1 + Math.pow(Math.sin(t.current), 2)) - 3.5,\r\n      0,\r\n    ]\r\n\r\n    api.position.set(v[0], v[1], v[2])\r\n  })\r\n\r\n  return (\r\n    <mesh ref={ref}>\r\n      <sphereBufferGeometry attach=\"geometry\" args={[props.ballSize, 32, 32]} />\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n        roughness={0}\r\n        metalness={0.1}\r\n        color={'peachpuff'}\r\n      />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nexport const Balls = props => {\r\n  let ballArr = []\r\n  for (let i = 0; i < props.count; i++) {\r\n    ballArr.push(\r\n      <Ball\r\n        speed={props.bpm}\r\n        startPos={(i * (2 * Math.PI)) / props.count}\r\n        ballSize={props.ballSize}\r\n        position={props.p0}\r\n        radius={props.radius}\r\n      />\r\n    )\r\n  }\r\n  return ballArr\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { useSpring, a } from 'react-spring/three'\r\nimport * as Tone from 'tone'\r\n// import { MeshWobbleMaterial } from '@react-three/drei'\r\nimport { useBox } from '@react-three/cannon'\r\n\r\nconst key = 'cdefgab'\r\nconst oct = '1234'\r\n\r\nconst noteToWidth = note => {\r\n  const a = key.indexOf(note[0])\r\n  const b = oct.indexOf(note[1]) * key.length\r\n  return (((a + b) * 20) / 27) - 20\r\n}\r\n\r\nexport const Strings = props => {\r\n  let stringArr = []\r\n  let pos = 5 / 2\r\n  let sS = 3\r\n  for (let i = 0; i < 5; i++) {\r\n    let a = Math.floor(Math.random() * 6)\r\n    let b = Math.floor(Math.random() * 3)\r\n    stringArr.push(\r\n      <String position={[0, pos - i * sS, 0]} note={key[a] + oct[b]} />\r\n    )\r\n  }\r\n  return stringArr\r\n}\r\n\r\nexport const String = props => {\r\n  const [active, setActive] = useState(false)\r\n\r\n  const [ref, api] = useBox(() => ({\r\n    mass: 0,\r\n    position: props.position,\r\n    args: [15, 0.2, 0.2],\r\n    type: 'Dynamic',\r\n    onCollide: e => {\r\n      const synth = new Tone.Synth().toDestination()\r\n      synth.triggerAttackRelease(props.note, '8n')\r\n      setActive(true)\r\n      setTimeout(() => {\r\n        setActive(false)\r\n      }, 200)\r\n    },\r\n  }))\r\n\r\n  const aProps = useSpring({\r\n    color: active ? 'red' : 'white',\r\n  })\r\n\r\n  return (\r\n    <a.mesh ref={ref}>\r\n      <boxBufferGeometry\r\n        attach=\"geometry\"\r\n        args={[noteToWidth(props.note), 0.2, 0.2]}\r\n      />\r\n      <a.meshStandardMaterial attach=\"material\" color={aProps.color} />\r\n    </a.mesh>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Canvas } from 'react-three-fiber'\r\nimport { Physics } from '@react-three/cannon'\r\nimport { Lighting } from './lighting/Lighting'\r\nimport { Balls } from './object/Ball'\r\nimport { Strings } from './object/String'\r\n\r\nimport './App.css'\r\n\r\nexport default function App() {\r\n  const bpm = 125 // beats per min\r\n  const count = 3 // number of balls\r\n  const r = 30 // radius\r\n  const ballSize = 1 // size of each ball\r\n  const p0 = [-100, -100, 0] // ball position\r\n\r\n  return (\r\n    <Canvas\r\n      shadowMap\r\n      gl={{ alpha: false }}\r\n      camera={{ position: [0, 0, 60], fov: 60 }}\r\n    >\r\n      <Lighting />\r\n      <Physics>\r\n        <Balls bpm={bpm} count={count} ballSize={ballSize} p0={p0} radius={r} />\r\n        <Strings />\r\n      </Physics>\r\n    </Canvas>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}
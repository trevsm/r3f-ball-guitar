{"version":3,"sources":["lighting/Lighting.js","object/Ball.js","object/String.js","App.js","index.js"],"names":["Lighting","props","intensity","Ball","useSphere","mass","position","size","ballSize","ref","api","t","useRef","startPos","useFrame","current","speed","v","radius","Math","cos","pow","sin","set","attach","args","roughness","metalness","color","Balls","ballArr","i","count","push","bpm","PI","p0","key","song","noteToWidth","note","length","indexOf","Strings","idx","String","synth","Tone","toDestination","useState","active","setActive","width","setWidth","toggleActive","setTimeout","increaseIdx","playNote","state","triggerAttackRelease","useBox","type","onCollide","e","aProps","useSpring","mesh","onClick","meshStandardMaterial","App","shadowMap","gl","alpha","camera","fov","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.838f80a6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Lighting = props => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={1} />\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\nimport { useSphere } from '@react-three/cannon'\r\n\r\n\r\nexport const Ball = props => {\r\n  const [ref, api] = useSphere(() => ({\r\n    mass: 0,\r\n    position: props.position,\r\n    size: [props.ballSize, 32, 32],\r\n  }))\r\n\r\n  const t = useRef(props.startPos)\r\n\r\n  useFrame(() => {\r\n    t.current += props.speed / 41000\r\n\r\n    const v = [\r\n      ((props.radius / 2) * Math.cos(t.current)) /\r\n        (1 + Math.pow(Math.sin(t.current), 2)),\r\n      (props.radius * Math.sin(t.current) * Math.cos(t.current)) /\r\n        (1 + Math.pow(Math.sin(t.current), 2)) -\r\n        3.5,\r\n      0,\r\n    ]\r\n\r\n    api.position.set(v[0], v[1], v[2])\r\n  })\r\n\r\n  return (\r\n    <mesh ref={ref}>\r\n      <sphereBufferGeometry attach=\"geometry\" args={[props.ballSize, 32, 32]} />\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n        roughness={0}\r\n        metalness={0.1}\r\n        color={'peachpuff'}\r\n      />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nexport const Balls = props => {\r\n  let ballArr = []\r\n  for (let i = 0; i < props.count; i++) {\r\n    ballArr.push(\r\n      <Ball\r\n        speed={props.bpm}\r\n        startPos={(i * (2 * Math.PI)) / props.count}\r\n        ballSize={props.ballSize}\r\n        position={props.p0}\r\n        radius={props.radius}\r\n      />\r\n    )\r\n  }\r\n  return ballArr\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useSpring, a } from 'react-spring/three'\r\nimport * as Tone from 'tone'\r\n// import { MeshWobbleMaterial } from '@react-three/drei'\r\nimport { useBox } from '@react-three/cannon'\r\n\r\nconst key = 'cdefgab'\r\nconst oct = '1234'\r\nconst song = [\r\n  'g2',\r\n  'e3',\r\n  'd3',\r\n  'c3',\r\n  'g2',\r\n  '',\r\n  'g2',\r\n  'g2',\r\n  'g2',\r\n  'e3',\r\n  'd3',\r\n  'c3',\r\n  'a2',\r\n  '',\r\n  'a2',\r\n  'f3',\r\n  'e3',\r\n  'd3',\r\n  'b2',\r\n  '',\r\n  'g3',\r\n  'g3',\r\n  'f3',\r\n  'd3',\r\n  'e3',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n\r\n]\r\n\r\nconst noteToWidth = note => {\r\n  if (note.length) {\r\n    const a = key.indexOf(note[0])\r\n    const b = oct.indexOf(note[1]) * key.length\r\n    return ((a + b) * 20) / 27 - 20\r\n  } else return 0\r\n}\r\n\r\nexport const Strings = props => {\r\n  return (\r\n    <>\r\n      <String position={[0, 2.5, 0]} idx={0} />\r\n      <String position={[0, -0.5, 0]} idx={1} />\r\n      <String position={[0, -3.5, 0]} idx={2} />\r\n      <String position={[0, -6.5, 0]} idx={3} />\r\n      <String position={[0, -9.5, 0]} idx={4} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport const String = props => {\r\n  const synth = useRef(new Tone.Synth().toDestination())\r\n  const idx = useRef(props.idx)\r\n\r\n  const [active, setActive] = useState(false)\r\n  const [width, setWidth] = useState(noteToWidth(song[idx.current]))\r\n\r\n  const toggleActive = () => {\r\n    setActive(true)\r\n    setTimeout(() => {\r\n      setActive(false)\r\n      increaseIdx()\r\n    }, 200)\r\n  }\r\n\r\n  const increaseIdx = () => {\r\n    if (idx.current + 5 < song.length) {\r\n      idx.current += 5\r\n    } else {\r\n      idx.current = props.idx\r\n    }\r\n    setTimeout(() => {\r\n      setWidth(noteToWidth(song[idx.current]))\r\n    }, 500)\r\n  }\r\n\r\n  const playNote = () => {\r\n    if (song[idx.current].length && Tone.context.state === 'running')\r\n      synth.current.triggerAttackRelease(song[idx.current], '8n')\r\n  }\r\n\r\n  const [ref, api] = useBox(() => ({\r\n    mass: 0,\r\n    position: props.position,\r\n    args: [15, 0.2, 0.2],\r\n    type: 'Dynamic',\r\n    onCollide: e => {\r\n      playNote()\r\n      toggleActive()\r\n    },\r\n  }))\r\n\r\n  const aProps = useSpring({\r\n    color: active ? 'red' : 'white',\r\n  })\r\n\r\n  return (\r\n    <a.mesh ref={ref} onClick={()=>{\r\n      playNote()\r\n      toggleActive()\r\n    }}>\r\n      <boxBufferGeometry attach=\"geometry\" args={[width, .5, .5]} />\r\n      <a.meshStandardMaterial attach=\"material\" color={aProps.color} />\r\n    </a.mesh>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Canvas } from 'react-three-fiber'\r\nimport { Physics } from '@react-three/cannon'\r\nimport { Lighting } from './lighting/Lighting'\r\nimport { Balls } from './object/Ball'\r\nimport { Strings } from './object/String'\r\n\r\nimport './App.css'\r\n\r\nexport default function App() {\r\n  const bpm = 120 // beats per min\r\n  const count = 3 // number of balls\r\n  const r = 30 // radius\r\n  const ballSize = 1 // size of each ball\r\n  const p0 = [-100, -100, 0] // ball position\r\n\r\n  return (\r\n    <Canvas\r\n      shadowMap\r\n      gl={{ alpha: false }}\r\n      camera={{ position: [0, 0, 60], fov: 60 }}\r\n    >\r\n      <Lighting />\r\n      <Physics>\r\n        <Balls bpm={bpm} count={count} ballSize={ballSize} p0={p0} radius={r} />\r\n        <Strings />\r\n      </Physics>\r\n    </Canvas>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}
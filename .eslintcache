[{"C:\\Users\\Dev\\Desktop\\r3f-ball-guitar\\src\\index.js":"1","C:\\Users\\Dev\\Desktop\\r3f-ball-guitar\\src\\App.js":"2","C:\\Users\\Dev\\Desktop\\r3f-ball-guitar\\src\\lighting\\Lighting.js":"3","C:\\Users\\Dev\\Desktop\\r3f-ball-guitar\\src\\stats\\Stats.js":"4","C:\\Users\\Dev\\Desktop\\r3f-ball-guitar\\src\\object\\Ball.js":"5","C:\\Users\\Dev\\Desktop\\r3f-ball-guitar\\src\\object\\String.js":"6"},{"size":149,"mtime":1608926830110,"results":"7","hashOfConfig":"8"},{"size":817,"mtime":1609031123336,"results":"9","hashOfConfig":"8"},{"size":297,"mtime":1609019948346,"results":"10","hashOfConfig":"8"},{"size":709,"mtime":1608926830111,"results":"11","hashOfConfig":"12"},{"size":1388,"mtime":1609025492782,"results":"13","hashOfConfig":"8"},{"size":1567,"mtime":1609030696255,"results":"14","hashOfConfig":"8"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"shuas6",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"txbdlp",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"17"},"C:\\Users\\Dev\\Desktop\\r3f-ball-guitar\\src\\index.js",[],["31","32"],"C:\\Users\\Dev\\Desktop\\r3f-ball-guitar\\src\\App.js",[],"C:\\Users\\Dev\\Desktop\\r3f-ball-guitar\\src\\lighting\\Lighting.js",["33","34"],"import React, { useRef } from 'react'\r\nimport { Sky } from '@react-three/drei'\r\n\r\nexport const Lighting = props => {\r\n  return (\r\n    <>\r\n      {/* <Sky sunPosition={[10,10,10]}/> */}\r\n      {/* <directionalLight position={[10,10,10]}/> */}\r\n      <ambientLight intensity={1} />\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\r3f-ball-guitar\\src\\stats\\Stats.js",["35"],"C:\\Users\\Dev\\Desktop\\r3f-ball-guitar\\src\\object\\Ball.js",["36"],"import React, { useEffect, useRef } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\nimport { useSphere } from '@react-three/cannon'\r\n\r\nexport const Ball = props => {\r\n\r\n  const [ref, api] = useSphere(() => ({\r\n    mass: 0,\r\n    size: [props.ballSize, 32, 32],\r\n  }))\r\n\r\n  const pos = props.position\r\n\r\n  const t = useRef(props.startPos)\r\n\r\n  useFrame(() => {\r\n    t.current += props.speed / 10000 + 0.0027\r\n\r\n    const v = [\r\n      pos[0] +\r\n        (props.radius * Math.cos(t.current)) /\r\n          (1 + Math.pow(Math.sin(t.current), 2)),\r\n      pos[1] +\r\n        (props.radius * Math.sin(t.current) * Math.cos(t.current)) /\r\n          (1 + Math.pow(Math.sin(t.current), 2)),\r\n      0,\r\n    ]\r\n\r\n    api.position.set(v[0], v[1], v[2])\r\n  })\r\n\r\n  return (\r\n    <mesh ref={ref}>\r\n      <sphereBufferGeometry attach=\"geometry\" args={[props.ballSize, 32, 32]} />\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n        roughness={0}\r\n        metalness={0.1}\r\n        color={'peachpuff'}\r\n      />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nexport const Balls = (props) => {\r\n  let ballArr = []\r\n  for (let i = 0; i < props.count; i++) {\r\n    ballArr.push(\r\n      <Ball\r\n        speed={props.bpm}\r\n        startPos={(i * (2 * Math.PI)) / props.count}\r\n        ballSize={props.ballSize}\r\n        position={props.p0}\r\n        radius={props.radius}\r\n      />\r\n    )\r\n  }\r\n  return ballArr\r\n}\r\n","C:\\Users\\Dev\\Desktop\\r3f-ball-guitar\\src\\object\\String.js",["37","38"],"import React, { useRef, useState } from 'react'\r\nimport { useSpring, a } from 'react-spring/three'\r\nimport * as Tone from 'tone'\r\n// import { MeshWobbleMaterial } from '@react-three/drei'\r\nimport { useBox } from '@react-three/cannon'\r\n\r\nconst key = 'cdefgab'\r\nconst oct = '1234'\r\n\r\nconst noteToWidth = note => {\r\n  const a = key.indexOf(note[0])\r\n  const b = oct.indexOf(note[1]) * key.length\r\n  return (((a + b) * 15) / 27) - 15\r\n}\r\n\r\nexport const Strings = props => {\r\n  let stringArr = []\r\n  let pos = props.stringCount / 2\r\n  for (let i = 0; i < props.stringCount; i++) {\r\n    let a = Math.floor(Math.random() * 6)\r\n    let b = Math.floor(Math.random() * 3)\r\n    stringArr.push(\r\n      <String position={[0, pos - i * 2, 0]} note={key[a] + oct[b]} />\r\n    )\r\n  }\r\n  return stringArr\r\n}\r\n\r\nexport const String = props => {\r\n  const [active, setActive] = useState(false)\r\n\r\n  const [ref, api] = useBox(() => ({\r\n    mass: 0,\r\n    position: props.position,\r\n    args: [15, 0.2, 0.2],\r\n    type: 'Dynamic',\r\n    onCollide: e => {\r\n      const synth = new Tone.Synth().toDestination()\r\n      synth.triggerAttackRelease(props.note, '8n')\r\n      setActive(true)\r\n      setTimeout(() => {\r\n        setActive(false)\r\n      }, 200)\r\n    },\r\n  }))\r\n\r\n  const aProps = useSpring({\r\n    color: active ? 'red' : 'white',\r\n  })\r\n\r\n  return (\r\n    <a.mesh ref={ref}>\r\n      <boxBufferGeometry\r\n        attach=\"geometry\"\r\n        args={[noteToWidth(props.note), 0.2, 0.2]}\r\n      />\r\n      <a.meshStandardMaterial attach=\"material\" color={aProps.color} />\r\n    </a.mesh>\r\n  )\r\n}\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":23},{"ruleId":"43","severity":1,"message":"47","line":2,"column":10,"nodeType":"45","messageId":"46","endLine":2,"endColumn":13},{"ruleId":"48","severity":1,"message":"49","line":24,"column":6,"nodeType":"50","endLine":24,"endColumn":14,"suggestions":"51"},{"ruleId":"43","severity":1,"message":"52","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":26},{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":23},{"ruleId":"43","severity":1,"message":"53","line":32,"column":15,"nodeType":"45","messageId":"46","endLine":32,"endColumn":18},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Sky' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'className', 'showPanel', and 'stats'. Either include them or remove the dependency array.","ArrayExpression",["56"],"'useEffect' is defined but never used.","'api' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [className, parent, showPanel, stats]",{"range":"59","text":"60"},[680,688],"[className, parent, showPanel, stats]"]